{"remainingRequest":"/Users/luxun/goWeb/lusun/vue-element-admin/node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js!/Users/luxun/goWeb/lusun/vue-element-admin/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!/Users/luxun/goWeb/lusun/vue-element-admin/node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js??vue-loader-options!/Users/luxun/goWeb/lusun/vue-element-admin/src/components/UploadExcel/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luxun/goWeb/lusun/vue-element-admin/src/components/UploadExcel/index.vue","mtime":1663661188314},{"path":"/Users/luxun/goWeb/lusun/vue-element-admin/babel.config.js","mtime":1663661188294},{"path":"/Users/luxun/goWeb/lusun/vue-element-admin/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luxun/goWeb/lusun/vue-element-admin/node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/luxun/goWeb/lusun/vue-element-admin/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luxun/goWeb/lusun/vue-element-admin/node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnB1c2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50ZXN0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBYTFNYIGZyb20gJ3hsc3gnOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIGJlZm9yZVVwbG9hZDogRnVuY3Rpb24sCiAgICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lCiAgICBvblN1Y2Nlc3M6IEZ1bmN0aW9uIC8vIGVzbGludC1kaXNhYmxlLWxpbmUKCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgIGV4Y2VsRGF0YTogewogICAgICAgIGhlYWRlcjogbnVsbCwKICAgICAgICByZXN1bHRzOiBudWxsCiAgICAgIH0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZW5lcmF0ZURhdGE6IGZ1bmN0aW9uIGdlbmVyYXRlRGF0YShfcmVmKSB7CiAgICAgIHZhciBoZWFkZXIgPSBfcmVmLmhlYWRlciwKICAgICAgICAgIHJlc3VsdHMgPSBfcmVmLnJlc3VsdHM7CiAgICAgIHRoaXMuZXhjZWxEYXRhLmhlYWRlciA9IGhlYWRlcjsKICAgICAgdGhpcy5leGNlbERhdGEucmVzdWx0cyA9IHJlc3VsdHM7CiAgICAgIHRoaXMub25TdWNjZXNzICYmIHRoaXMub25TdWNjZXNzKHRoaXMuZXhjZWxEYXRhKTsKICAgIH0sCiAgICBoYW5kbGVEcm9wOiBmdW5jdGlvbiBoYW5kbGVEcm9wKGUpIHsKICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICBpZiAodGhpcy5sb2FkaW5nKSByZXR1cm47CiAgICAgIHZhciBmaWxlcyA9IGUuZGF0YVRyYW5zZmVyLmZpbGVzOwoKICAgICAgaWYgKGZpbGVzLmxlbmd0aCAhPT0gMSkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ09ubHkgc3VwcG9ydCB1cGxvYWRpbmcgb25lIGZpbGUhJyk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgcmF3RmlsZSA9IGZpbGVzWzBdOyAvLyBvbmx5IHVzZSBmaWxlc1swXQoKICAgICAgaWYgKCF0aGlzLmlzRXhjZWwocmF3RmlsZSkpIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCdPbmx5IHN1cHBvcnRzIHVwbG9hZCAueGxzeCwgLnhscywgLmNzdiBzdWZmaXggZmlsZXMnKTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIHRoaXMudXBsb2FkKHJhd0ZpbGUpOwogICAgICBlLnN0b3BQcm9wYWdhdGlvbigpOwogICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICB9LAogICAgaGFuZGxlRHJhZ292ZXI6IGZ1bmN0aW9uIGhhbmRsZURyYWdvdmVyKGUpIHsKICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICBlLmRhdGFUcmFuc2Zlci5kcm9wRWZmZWN0ID0gJ2NvcHknOwogICAgfSwKICAgIGhhbmRsZVVwbG9hZDogZnVuY3Rpb24gaGFuZGxlVXBsb2FkKCkgewogICAgICB0aGlzLiRyZWZzWydleGNlbC11cGxvYWQtaW5wdXQnXS5jbGljaygpOwogICAgfSwKICAgIGhhbmRsZUNsaWNrOiBmdW5jdGlvbiBoYW5kbGVDbGljayhlKSB7CiAgICAgIHZhciBmaWxlcyA9IGUudGFyZ2V0LmZpbGVzOwogICAgICB2YXIgcmF3RmlsZSA9IGZpbGVzWzBdOyAvLyBvbmx5IHVzZSBmaWxlc1swXQoKICAgICAgaWYgKCFyYXdGaWxlKSByZXR1cm47CiAgICAgIHRoaXMudXBsb2FkKHJhd0ZpbGUpOwogICAgfSwKICAgIHVwbG9hZDogZnVuY3Rpb24gdXBsb2FkKHJhd0ZpbGUpIHsKICAgICAgdGhpcy4kcmVmc1snZXhjZWwtdXBsb2FkLWlucHV0J10udmFsdWUgPSBudWxsOyAvLyBmaXggY2FuJ3Qgc2VsZWN0IHRoZSBzYW1lIGV4Y2VsCgogICAgICBpZiAoIXRoaXMuYmVmb3JlVXBsb2FkKSB7CiAgICAgICAgdGhpcy5yZWFkZXJEYXRhKHJhd0ZpbGUpOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdmFyIGJlZm9yZSA9IHRoaXMuYmVmb3JlVXBsb2FkKHJhd0ZpbGUpOwoKICAgICAgaWYgKGJlZm9yZSkgewogICAgICAgIHRoaXMucmVhZGVyRGF0YShyYXdGaWxlKTsKICAgICAgfQogICAgfSwKICAgIHJlYWRlckRhdGE6IGZ1bmN0aW9uIHJlYWRlckRhdGEocmF3RmlsZSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKCiAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICB2YXIgZGF0YSA9IGUudGFyZ2V0LnJlc3VsdDsKICAgICAgICAgIHZhciB3b3JrYm9vayA9IFhMU1gucmVhZChkYXRhLCB7CiAgICAgICAgICAgIHR5cGU6ICdhcnJheScKICAgICAgICAgIH0pOwogICAgICAgICAgdmFyIGZpcnN0U2hlZXROYW1lID0gd29ya2Jvb2suU2hlZXROYW1lc1swXTsKICAgICAgICAgIHZhciB3b3Jrc2hlZXQgPSB3b3JrYm9vay5TaGVldHNbZmlyc3RTaGVldE5hbWVdOwoKICAgICAgICAgIHZhciBoZWFkZXIgPSBfdGhpcy5nZXRIZWFkZXJSb3cod29ya3NoZWV0KTsKCiAgICAgICAgICB2YXIgcmVzdWx0cyA9IFhMU1gudXRpbHMuc2hlZXRfdG9fanNvbih3b3Jrc2hlZXQpOwoKICAgICAgICAgIF90aGlzLmdlbmVyYXRlRGF0YSh7CiAgICAgICAgICAgIGhlYWRlcjogaGVhZGVyLAogICAgICAgICAgICByZXN1bHRzOiByZXN1bHRzCiAgICAgICAgICB9KTsKCiAgICAgICAgICBfdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICByZXNvbHZlKCk7CiAgICAgICAgfTsKCiAgICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKHJhd0ZpbGUpOwogICAgICB9KTsKICAgIH0sCiAgICBnZXRIZWFkZXJSb3c6IGZ1bmN0aW9uIGdldEhlYWRlclJvdyhzaGVldCkgewogICAgICB2YXIgaGVhZGVycyA9IFtdOwogICAgICB2YXIgcmFuZ2UgPSBYTFNYLnV0aWxzLmRlY29kZV9yYW5nZShzaGVldFsnIXJlZiddKTsKICAgICAgdmFyIEM7CiAgICAgIHZhciBSID0gcmFuZ2Uucy5yOwogICAgICAvKiBzdGFydCBpbiB0aGUgZmlyc3Qgcm93ICovCgogICAgICBmb3IgKEMgPSByYW5nZS5zLmM7IEMgPD0gcmFuZ2UuZS5jOyArK0MpIHsKICAgICAgICAvKiB3YWxrIGV2ZXJ5IGNvbHVtbiBpbiB0aGUgcmFuZ2UgKi8KICAgICAgICB2YXIgY2VsbCA9IHNoZWV0W1hMU1gudXRpbHMuZW5jb2RlX2NlbGwoewogICAgICAgICAgYzogQywKICAgICAgICAgIHI6IFIKICAgICAgICB9KV07CiAgICAgICAgLyogZmluZCB0aGUgY2VsbCBpbiB0aGUgZmlyc3Qgcm93ICovCgogICAgICAgIHZhciBoZHIgPSAnVU5LTk9XTiAnICsgQzsgLy8gPC0tIHJlcGxhY2Ugd2l0aCB5b3VyIGRlc2lyZWQgZGVmYXVsdAoKICAgICAgICBpZiAoY2VsbCAmJiBjZWxsLnQpIGhkciA9IFhMU1gudXRpbHMuZm9ybWF0X2NlbGwoY2VsbCk7CiAgICAgICAgaGVhZGVycy5wdXNoKGhkcik7CiAgICAgIH0KCiAgICAgIHJldHVybiBoZWFkZXJzOwogICAgfSwKICAgIGlzRXhjZWw6IGZ1bmN0aW9uIGlzRXhjZWwoZmlsZSkgewogICAgICByZXR1cm4gL1wuKHhsc3h8eGxzfGNzdikkLy50ZXN0KGZpbGUubmFtZSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAaA;AAEA;EACAA;IACAC,sBADA;IACA;IACAC,mBAFA,CAEA;;EAFA,CADA;EAKAC,IALA,kBAKA;IACA;MACAC,cADA;MAEAC;QACAC,YADA;QAEAC;MAFA;IAFA;EAOA,CAbA;EAcAC;IACAC,YADA,8BACA;MAAA;MAAA;MACA;MACA;MACA;IACA,CALA;IAMAC,UANA,sBAMAC,CANA,EAMA;MACAA;MACAA;MACA;MACA;;MACA;QACA;QACA;MACA;;MACA,uBATA,CASA;;MAEA;QACA;QACA;MACA;;MACA;MACAA;MACAA;IACA,CAxBA;IAyBAC,cAzBA,0BAyBAD,CAzBA,EAyBA;MACAA;MACAA;MACAA;IACA,CA7BA;IA8BAE,YA9BA,0BA8BA;MACA;IACA,CAhCA;IAiCAC,WAjCA,uBAiCAH,CAjCA,EAiCA;MACA;MACA,uBAFA,CAEA;;MACA;MACA;IACA,CAtCA;IAuCAI,MAvCA,kBAuCAC,OAvCA,EAuCA;MACA,8CADA,CACA;;MAEA;QACA;QACA;MACA;;MACA;;MACA;QACA;MACA;IACA,CAlDA;IAmDAC,UAnDA,sBAmDAD,OAnDA,EAmDA;MAAA;;MACA;MACA;QACA;;QACAE;UACA;UACA;YAAAC;UAAA;UACA;UACA;;UACA;;UACA;;UACA;YAAAb;YAAAC;UAAA;;UACA;UACAa;QACA,CAVA;;QAWAF;MACA,CAdA;IAeA,CApEA;IAqEAG,YArEA,wBAqEAC,KArEA,EAqEA;MACA;MACA;MACA;MACA;MACA;;MACA;QAAA;QACA;UAAAC;UAAAC;QAAA;QACA;;QACA,yBAHA,CAGA;;QACA;QACAC;MACA;;MACA;IACA,CAnFA;IAoFAC,OApFA,mBAoFAC,IApFA,EAoFA;MACA;IACA;EAtFA;AAdA","names":["props","beforeUpload","onSuccess","data","loading","excelData","header","results","methods","generateData","handleDrop","e","handleDragover","handleUpload","handleClick","upload","rawFile","readerData","reader","type","resolve","getHeaderRow","sheet","c","r","headers","isExcel","file"],"sourceRoot":"src/components/UploadExcel","sources":["index.vue"],"sourcesContent":["<template>\n  <div>\n    <input ref=\"excel-upload-input\" class=\"excel-upload-input\" type=\"file\" accept=\".xlsx, .xls\" @change=\"handleClick\">\n    <div class=\"drop\" @drop=\"handleDrop\" @dragover=\"handleDragover\" @dragenter=\"handleDragover\">\n      Drop excel file here or\n      <el-button :loading=\"loading\" style=\"margin-left:16px;\" size=\"mini\" type=\"primary\" @click=\"handleUpload\">\n        Browse\n      </el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport XLSX from 'xlsx'\n\nexport default {\n  props: {\n    beforeUpload: Function, // eslint-disable-line\n    onSuccess: Function// eslint-disable-line\n  },\n  data() {\n    return {\n      loading: false,\n      excelData: {\n        header: null,\n        results: null\n      }\n    }\n  },\n  methods: {\n    generateData({ header, results }) {\n      this.excelData.header = header\n      this.excelData.results = results\n      this.onSuccess && this.onSuccess(this.excelData)\n    },\n    handleDrop(e) {\n      e.stopPropagation()\n      e.preventDefault()\n      if (this.loading) return\n      const files = e.dataTransfer.files\n      if (files.length !== 1) {\n        this.$message.error('Only support uploading one file!')\n        return\n      }\n      const rawFile = files[0] // only use files[0]\n\n      if (!this.isExcel(rawFile)) {\n        this.$message.error('Only supports upload .xlsx, .xls, .csv suffix files')\n        return false\n      }\n      this.upload(rawFile)\n      e.stopPropagation()\n      e.preventDefault()\n    },\n    handleDragover(e) {\n      e.stopPropagation()\n      e.preventDefault()\n      e.dataTransfer.dropEffect = 'copy'\n    },\n    handleUpload() {\n      this.$refs['excel-upload-input'].click()\n    },\n    handleClick(e) {\n      const files = e.target.files\n      const rawFile = files[0] // only use files[0]\n      if (!rawFile) return\n      this.upload(rawFile)\n    },\n    upload(rawFile) {\n      this.$refs['excel-upload-input'].value = null // fix can't select the same excel\n\n      if (!this.beforeUpload) {\n        this.readerData(rawFile)\n        return\n      }\n      const before = this.beforeUpload(rawFile)\n      if (before) {\n        this.readerData(rawFile)\n      }\n    },\n    readerData(rawFile) {\n      this.loading = true\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader()\n        reader.onload = e => {\n          const data = e.target.result\n          const workbook = XLSX.read(data, { type: 'array' })\n          const firstSheetName = workbook.SheetNames[0]\n          const worksheet = workbook.Sheets[firstSheetName]\n          const header = this.getHeaderRow(worksheet)\n          const results = XLSX.utils.sheet_to_json(worksheet)\n          this.generateData({ header, results })\n          this.loading = false\n          resolve()\n        }\n        reader.readAsArrayBuffer(rawFile)\n      })\n    },\n    getHeaderRow(sheet) {\n      const headers = []\n      const range = XLSX.utils.decode_range(sheet['!ref'])\n      let C\n      const R = range.s.r\n      /* start in the first row */\n      for (C = range.s.c; C <= range.e.c; ++C) { /* walk every column in the range */\n        const cell = sheet[XLSX.utils.encode_cell({ c: C, r: R })]\n        /* find the cell in the first row */\n        let hdr = 'UNKNOWN ' + C // <-- replace with your desired default\n        if (cell && cell.t) hdr = XLSX.utils.format_cell(cell)\n        headers.push(hdr)\n      }\n      return headers\n    },\n    isExcel(file) {\n      return /\\.(xlsx|xls|csv)$/.test(file.name)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.excel-upload-input{\n  display: none;\n  z-index: -9999;\n}\n.drop{\n  border: 2px dashed #bbb;\n  width: 600px;\n  height: 160px;\n  line-height: 160px;\n  margin: 0 auto;\n  font-size: 24px;\n  border-radius: 5px;\n  text-align: center;\n  color: #bbb;\n  position: relative;\n}\n</style>\n"]}]}